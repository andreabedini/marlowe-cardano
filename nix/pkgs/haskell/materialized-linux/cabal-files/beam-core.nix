{ system
  , compiler
  , flags
  , pkgs
  , hsPkgs
  , pkgconfPkgs
  , errorHandler
  , config
  , ... }:
  ({
    flags = { werror = false; };
    package = {
      specVersion = "1.18";
      identifier = { name = "beam-core"; version = "0.9.2.1"; };
      license = "MIT";
      copyright = "";
      maintainer = "travis@athougies.net";
      author = "Travis Athougies";
      homepage = "http://travis.athougies.net/projects/beam.html";
      url = "";
      synopsis = "Type-safe, feature-complete SQL query and manipulation interface for Haskell";
      description = "Beam is a Haskell library for type-safe querying and manipulation of SQL databases.\nBeam is modular and supports various backends. In order to use beam, you will need to use\n@beam-core@ along with a specific backend (such as @beam-postgres@ or @beam-sqlite@) as\nwell as the corresponding backend.\nFor more information, see the user manual and tutorial on\n<https://haskell-beam.github.io/beam GitHub pages>.";
      buildType = "Simple";
      };
    components = {
      "library" = {
        depends = [
          (hsPkgs."base" or (errorHandler.buildDepError "base"))
          (hsPkgs."aeson" or (errorHandler.buildDepError "aeson"))
          (hsPkgs."text" or (errorHandler.buildDepError "text"))
          (hsPkgs."bytestring" or (errorHandler.buildDepError "bytestring"))
          (hsPkgs."mtl" or (errorHandler.buildDepError "mtl"))
          (hsPkgs."microlens" or (errorHandler.buildDepError "microlens"))
          (hsPkgs."ghc-prim" or (errorHandler.buildDepError "ghc-prim"))
          (hsPkgs."free" or (errorHandler.buildDepError "free"))
          (hsPkgs."dlist" or (errorHandler.buildDepError "dlist"))
          (hsPkgs."time" or (errorHandler.buildDepError "time"))
          (hsPkgs."hashable" or (errorHandler.buildDepError "hashable"))
          (hsPkgs."network-uri" or (errorHandler.buildDepError "network-uri"))
          (hsPkgs."containers" or (errorHandler.buildDepError "containers"))
          (hsPkgs."scientific" or (errorHandler.buildDepError "scientific"))
          (hsPkgs."vector" or (errorHandler.buildDepError "vector"))
          (hsPkgs."vector-sized" or (errorHandler.buildDepError "vector-sized"))
          (hsPkgs."tagged" or (errorHandler.buildDepError "tagged"))
          ];
        buildable = true;
        };
      tests = {
        "beam-core-tests" = {
          depends = [
            (hsPkgs."base" or (errorHandler.buildDepError "base"))
            (hsPkgs."beam-core" or (errorHandler.buildDepError "beam-core"))
            (hsPkgs."text" or (errorHandler.buildDepError "text"))
            (hsPkgs."bytestring" or (errorHandler.buildDepError "bytestring"))
            (hsPkgs."time" or (errorHandler.buildDepError "time"))
            (hsPkgs."tasty" or (errorHandler.buildDepError "tasty"))
            (hsPkgs."tasty-hunit" or (errorHandler.buildDepError "tasty-hunit"))
            ];
          buildable = true;
          };
        };
      };
    } // {
    src = (pkgs.lib).mkDefault (pkgs.fetchurl {
      url = "http://hackage.haskell.org/package/beam-core-0.9.2.1.tar.gz";
      sha256 = "2a8f697b7018580a0382e368812a0f78e580e36426da94aa33bbe126a202414b";
      });
    }) // {
    package-description-override = "-- Initial beam.cabal generated by cabal init.  For further documentation,\n-- see http://haskell.org/cabal/users-guide/\n\nname:                beam-core\nversion:             0.9.2.1\nsynopsis:            Type-safe, feature-complete SQL query and manipulation interface for Haskell\ndescription:         Beam is a Haskell library for type-safe querying and manipulation of SQL databases.\n                     Beam is modular and supports various backends. In order to use beam, you will need to use\n                     @beam-core@ along with a specific backend (such as @beam-postgres@ or @beam-sqlite@) as\n                     well as the corresponding backend.\n\n                     For more information, see the user manual and tutorial on\n                     <https://haskell-beam.github.io/beam GitHub pages>.\nhomepage:            http://travis.athougies.net/projects/beam.html\nlicense:             MIT\nlicense-file:        LICENSE\nauthor:              Travis Athougies\nmaintainer:          travis@athougies.net\ncategory:            Database\nbuild-type:          Simple\ncabal-version:       1.18\nbug-reports:         https://github.com/haskell-beam/beam/issues\nextra-doc-files:     ChangeLog.md\n\nlibrary\n  exposed-modules:     Database.Beam Database.Beam.Backend\n                       Database.Beam.Query\n                       Database.Beam.Query.Adhoc\n                       Database.Beam.Query.Internal\n                       Database.Beam.Query.CustomSQL\n                       Database.Beam.Query.CTE\n                       Database.Beam.Query.DataTypes\n                       Database.Beam.Query.SQL92\n                       Database.Beam.Query.Types\n\n                       Database.Beam.Schema\n                       Database.Beam.Schema.Tables\n\n                       Database.Beam.Backend.Types\n                       Database.Beam.Backend.URI\n                       Database.Beam.Backend.SQL\n                       Database.Beam.Backend.SQL.Row\n                       Database.Beam.Backend.SQL.Types\n                       Database.Beam.Backend.SQL.BeamExtensions\n                       Database.Beam.Backend.SQL.SQL92\n                       Database.Beam.Backend.SQL.SQL99\n                       Database.Beam.Backend.SQL.SQL2003\n                       Database.Beam.Backend.SQL.Builder\n                       Database.Beam.Backend.SQL.AST\n\n                       Database.Beam.Backend.Internal.Compat\n\n  other-modules:       Database.Beam.Query.Aggregate\n                       Database.Beam.Query.Combinators\n                       Database.Beam.Query.Extensions\n                       Database.Beam.Query.Extract\n                       Database.Beam.Query.Operator\n                       Database.Beam.Query.Ord\n                       Database.Beam.Query.Relationships\n\n                       Database.Beam.Schema.Lenses\n\n  build-depends:       base         >=4.11    && <5.0,\n                       aeson        >=0.11    && <2.1,\n                       text         >=1.2.2.0 && <1.3,\n                       bytestring   >=0.10    && <0.12,\n                       mtl          >=2.2.1   && <2.3,\n                       microlens    >=0.4     && <0.5,\n                       ghc-prim     >=0.5     && <0.9,\n                       free         >=4.12    && <5.2,\n                       dlist        >=0.7.1.2 && <1.1,\n                       time         >=1.6     && <1.12,\n                       hashable     >=1.2.4.0 && <1.5,\n                       network-uri  >=2.6     && <2.7,\n                       containers   >=0.5     && <0.7,\n                       scientific   >=0.3     && <0.4,\n                       vector       >=0.11    && <0.13,\n                       vector-sized >=0.5     && <1.6,\n                       tagged       >=0.8     && <0.9\n\n  Default-language:    Haskell2010\n  default-extensions:  ScopedTypeVariables, OverloadedStrings, GADTs, RecursiveDo, FlexibleInstances, FlexibleContexts, TypeFamilies,\n                       GeneralizedNewtypeDeriving, RankNTypes, TupleSections, ConstraintKinds, StandaloneDeriving, TypeOperators,\n                       DefaultSignatures, KindSignatures, MultiParamTypeClasses, DeriveGeneric, DeriveFunctor, DeriveDataTypeable,\n                       TypeApplications, FunctionalDependencies, DataKinds, BangPatterns, InstanceSigs\n  ghc-options:         -Wall -O3\n  if impl(ghc >= 8.8)\n    ghc-options: -Wcompat\n  if flag(werror)\n    ghc-options:       -Werror\n  if impl(ghc >= 8.10)\n    default-extensions: TypeFamilyDependencies\n\nflag werror\n  description: Enable -Werror during development\n  default:     False\n  manual:      True\n\ntest-suite beam-core-tests\n  type: exitcode-stdio-1.0\n  hs-source-dirs: test\n  main-is: Main.hs\n  other-modules: Database.Beam.Test.Schema Database.Beam.Test.SQL\n  build-depends: base, beam-core, text, bytestring, time, tasty, tasty-hunit\n  default-language: Haskell2010\n  default-extensions: OverloadedStrings, FlexibleInstances, FlexibleContexts, GADTs, TypeFamilies,\n                      DeriveGeneric, DefaultSignatures, RankNTypes, StandaloneDeriving, KindSignatures,\n                      TypeApplications, ScopedTypeVariables, MultiParamTypeClasses\n\nsource-repository head\n  type: git\n  location: https://github.com/haskell-beam/beam.git\n  subdir: beam-core\n";
    }